C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE PICTURES
OBJECT MODULE PLACED IN pictures.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\c51.exe pictures.c DB OE BR SMALL OPTIMIZE(11,SIZE) DEFINE(SILABS_PLATFORM_WMB91
                    -2) DEFINE(SILABS_WMCU_SI106x)

line level    source

   1          /*! @file pictures.c
   2           * @brief This file contains pictures to be shown on graphical LCD.
   3           *
   4           * @b COPYRIGHT
   5           * @n Silicon Laboratories Confidential
   6           * @n Copyright 2012 Silicon Laboratories, Inc.
   7           * @n http://www.silabs.com
   8           */
   9          
  10          #include "..\bsp.h"
  11          
  12          /** NOTE: the picture description arrays are generated by Fntcvtr.exe 
  13           **               The first element of the array should be number of the vertical pixels / 8.   
  14           **               The second element of the array should be the number of horizontal pixels.    
  15           **/
  16          
  17          /*
  18           * INFO icon
  19          horizontal size is 21 pixels.
  20          vertical size is 8 pixels.
  21          */
  22          const SEGMENT_VARIABLE(info21x8[], U8, SEG_CODE) = {
  23          1,21,
  24          '\xff',
  25          '\x81',
  26          '\xff',
  27          '\x81',
  28          '\xfb',
  29          '\xf7',
  30          '\xef',
  31          '\xdf',
  32          '\x81',
  33          '\xff',
  34          '\x81',
  35          '\xf5',
  36          '\xf5',
  37          '\xfd',
  38          '\xff',
  39          '\xc3',
  40          '\xbd',
  41          '\xbd',
  42          '\xbd',
  43          '\xc3',
  44          '\xff'
  45          }; /* end of char *info21x8 */
  46          
  47          /*
  48           * RSSI icon
  49          horizontal size is 23 pixels.
  50          vertical size is 8 pixels.
  51          */
  52          const SEGMENT_VARIABLE(rssi_icon[], U8, SEG_CODE) = {
  53          1,23,
  54          '\xff',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 2   

  55          '\x81',
  56          '\xed',
  57          '\xed',
  58          '\xed',
  59          '\x93',
  60          '\xff',
  61          '\xdb',
  62          '\xb5',
  63          '\xb5',
  64          '\xb5',
  65          '\xcf',
  66          '\xff',
  67          '\xdb',
  68          '\xb5',
  69          '\xb5',
  70          '\xb5',
  71          '\xcf',
  72          '\xff',
  73          '\xbd',
  74          '\x81',
  75          '\xbd',
  76          '\xff',
  77          }; /* end of char *info21x8 */
  78          
  79          /*
  80          NO PACKET ICON
  81            horizontal size is 11 pixels.
  82            vertical size is 8 pixels.
  83          */
  84          const SEGMENT_VARIABLE(no_packet11x8[], U8, SEG_CODE) = {
  85          1,11,
  86          '\x10',
  87          '\x10',
  88          '\x10',
  89          '\x00',
  90          '\x10',
  91          '\x10',
  92          '\x10',
  93          '\x00',
  94          '\x10',
  95          '\x10',
  96          '\x10'
  97          };
  98          
  99          /*
 100          RSSI1 ICON
 101            horizontal size is 2 pixels.
 102            vertical size is 8 pixels.
 103          */
 104          const SEGMENT_VARIABLE(rssi12x8[], U8, SEG_CODE) = {
 105          1,2,
 106          '\x40',
 107          '\x40'
 108          };
 109          
 110          /*
 111          RSSI2 ICON
 112            horizontal size is 4 pixels.
 113            vertical size is 8 pixels.
 114          */
 115          const SEGMENT_VARIABLE(rssi24x8[], U8, SEG_CODE) = {
 116          1,4,
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 3   

 117          '\x40',
 118          '\x40',
 119          '\x60',
 120          '\x60'
 121          };
 122          
 123          /*
 124          RSSI3 ICON
 125            horizontal size is 6 pixels.
 126            vertical size is 8 pixels.
 127          */
 128          const SEGMENT_VARIABLE(rssi36x8[], U8, SEG_CODE) = {
 129          1,6,
 130          '\x40',
 131          '\x40',
 132          '\x60',
 133          '\x60',
 134          '\x70',
 135          '\x70'
 136          };
 137          
 138          /*
 139          RSSI4 ICON
 140            horizontal size is 8 pixels.
 141            vertical size is 8 pixels.
 142          */
 143          const SEGMENT_VARIABLE(rssi48x8[], U8, SEG_CODE) = {
 144          1,8,
 145          '\x40',
 146          '\x40',
 147          '\x60',
 148          '\x60',
 149          '\x70',
 150          '\x70',
 151          '\x78',
 152          '\x78'
 153          };
 154          
 155          /*
 156          RSSI5 ICON
 157            horizontal size is 10 pixels.
 158            vertical size is 8 pixels.
 159          */
 160          const SEGMENT_VARIABLE(rssi510x8[], U8, SEG_CODE) = {
 161          1,10,
 162          '\x40',
 163          '\x40',
 164          '\x60',
 165          '\x60',
 166          '\x70',
 167          '\x70',
 168          '\x78',
 169          '\x78',
 170          '\x7c',
 171          '\x7c'
 172          };
 173          
 174          /*
 175          RSSI6 ICON
 176            horizontal size is 12 pixels.
 177            vertical size is 8 pixels.
 178          */
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 4   

 179          const SEGMENT_VARIABLE(rssi612x8[], U8, SEG_CODE) = {
 180          1,12,
 181          '\x40',
 182          '\x40',
 183          '\x60',
 184          '\x60',
 185          '\x70',
 186          '\x70',
 187          '\x78',
 188          '\x78',
 189          '\x7c',
 190          '\x7c',
 191          '\x7e',
 192          '\x7e'
 193          };
 194          
 195          /*
 196          RSSI7 ICON
 197            horizontal size is 14 pixels.
 198            vertical size is 8 pixels.
 199          */
 200          const SEGMENT_VARIABLE(rssi714x8[], U8, SEG_CODE) = {
 201          1,14,
 202          '\x40',
 203          '\x40',
 204          '\x60',
 205          '\x60',
 206          '\x70',
 207          '\x70',
 208          '\x78',
 209          '\x78',
 210          '\x7c',
 211          '\x7c',
 212          '\x7e',
 213          '\x7e',
 214          '\x7f',
 215          '\x7f'
 216          };
 217          
 218          /*
 219          ANTENNA ICON
 220            horizontal size is 9 pixels.
 221            vertical size is 8 pixels.
 222          */
 223          const SEGMENT_VARIABLE(ant9x8[], U8, SEG_CODE) = {
 224          1,9,
 225          '\x01',
 226          '\x02',
 227          '\x04',
 228          '\x7f',
 229          '\x04',
 230          '\x02',
 231          '\x01',
 232          '\x00',
 233          '\x24'
 234          };
 235          
 236          /*
 237          RSSI FULL ICON
 238            horizontal size is 14 pixels.
 239            vertical size is 8 pixels.
 240          */
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 5   

 241          const SEGMENT_VARIABLE(rssi_full_inverted14x8[], U8, SEG_CODE) = {
 242          1,14,
 243          '\x40',
 244          '\x40',
 245          '\x60',
 246          '\x60',
 247          '\x70',
 248          '\x70',
 249          '\x78',
 250          '\x78',
 251          '\x7c',
 252          '\x7c',
 253          '\x7e',
 254          '\x7e',
 255          '\x7f',
 256          '\x7f'
 257          };
 258          
 259          /*
 260          ANTANNA 1 ICON
 261            horizontal size is 15 pixels.
 262            vertical size is 8 pixels.
 263          */
 264          const SEGMENT_VARIABLE(ant1_inverted15x8[], U8, SEG_CODE) = {
 265          1,15,
 266          '\x7f',
 267          '\x7f',
 268          '\x7d',
 269          '\x7b',
 270          '\x41',
 271          '\x7b',
 272          '\x7d',
 273          '\x7f',
 274          '\x7f',
 275          '\x77',
 276          '\x7b',
 277          '\x41',
 278          '\x7f',
 279          '\x7f',
 280          '\x7f'
 281          };
 282          
 283          /*
 284          ANTANNA 2 ICON
 285            horizontal size is 15 pixels.
 286            vertical size is 8 pixels.
 287          */
 288          const SEGMENT_VARIABLE(ant2_inverted15x8[], U8, SEG_CODE) = {
 289          1,15,
 290          '\x7f',
 291          '\x7f',
 292          '\x7d',
 293          '\x7b',
 294          '\x41',
 295          '\x7b',
 296          '\x7d',
 297          '\x7f',
 298          '\x7f',
 299          '\x5b',
 300          '\x4d',
 301          '\x55',
 302          '\x5b',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 6   

 303          '\x7f',
 304          '\x7f'
 305          };
 306          
 307          /*
 308          OK ICON
 309            horizontal size is 21 pixels.
 310            vertical size is 8 pixels.
 311          */
 312          const SEGMENT_VARIABLE(ok_inverted21x8[], U8, SEG_CODE) = {
 313          1,21,
 314          '\x00',
 315          '\x00',
 316          '\xff',
 317          '\xff',
 318          '\xc3',
 319          '\xbd',
 320          '\xbd',
 321          '\xbd',
 322          '\xc3',
 323          '\xff',
 324          '\xff',
 325          '\x81',
 326          '\xef',
 327          '\xe7',
 328          '\xdb',
 329          '\xbd',
 330          '\xff',
 331          '\xff',
 332          '\x00',
 333          '\x00',
 334          '\x00',
 335          };
 336          
 337          /*
 338          RX ICON
 339            horizontal size is 16 pixels.
 340            vertical size is 8 pixels.
 341          */
 342          const SEGMENT_VARIABLE(rx_inverted16x8[], U8, SEG_CODE) = {
 343          1,16,
 344          '\x7f',
 345          '\x7f',
 346          '\x7f',
 347          '\x41',
 348          '\x75',
 349          '\x75',
 350          '\x4b',
 351          '\x7f',
 352          '\x7f',
 353          '\x5d',
 354          '\x6b',
 355          '\x77',
 356          '\x6b',
 357          '\x5d',
 358          '\x7f',
 359          '\x7f'
 360          };
 361          
 362          /*
 363          START OFF ICON
 364            horizontal size is 29 pixels.
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 7   

 365            vertical size is 8 pixels.
 366          */
 367          const SEGMENT_VARIABLE(start_inverted29x8[], U8, SEG_CODE) = {
 368          1,29,
 369          '\xff',
 370          '\xbb',
 371          '\xb5',
 372          '\xb5',
 373          '\xb5',
 374          '\xcd',
 375          '\xff',
 376          '\xfd',
 377          '\xfd',
 378          '\x81',
 379          '\xfd',
 380          '\xfd',
 381          '\xff',
 382          '\x83',
 383          '\xed',
 384          '\xed',
 385          '\x83',
 386          '\xff',
 387          '\x81',
 388          '\xed',
 389          '\xed',
 390          '\x93',
 391          '\xff',
 392          '\xfd',
 393          '\xfd',
 394          '\x81',
 395          '\xfd',
 396          '\xfd',
 397          '\xff'
 398          };
 399          
 400          /*
 401          STOP ICON
 402            horizontal size is 24 pixels.
 403            vertical size is 8 pixels.
 404          */
 405          const SEGMENT_VARIABLE(stop_inverted24x8[], U8, SEG_CODE) = {
 406          1,24,
 407          '\xff',
 408          '\xff',
 409          '\xbb',
 410          '\xb5',
 411          '\xb5',
 412          '\xb5',
 413          '\xcd',
 414          '\xff',
 415          '\xfd',
 416          '\xfd',
 417          '\x81',
 418          '\xfd',
 419          '\xfd',
 420          '\xff',
 421          '\xc3',
 422          '\xbd',
 423          '\xbd',
 424          '\xc3',
 425          '\xff',
 426          '\x81',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 8   

 427          '\xed',
 428          '\xed',
 429          '\xf3',
 430          '\xff'
 431          };
 432          
 433          /*
 434          TX ICON
 435            horizontal size is 16 pixels.
 436            vertical size is 8 pixels.
 437          */
 438          const SEGMENT_VARIABLE(tx_inverted16x8[], U8, SEG_CODE) = {
 439          1,16,
 440          '\x7f',
 441          '\x7f',
 442          '\x7d',
 443          '\x7d',
 444          '\x41',
 445          '\x7d',
 446          '\x7d',
 447          '\x7f',
 448          '\x7f',
 449          '\x5d',
 450          '\x6b',
 451          '\x77',
 452          '\x6b',
 453          '\x5d',
 454          '\x7f',
 455          '\x7f'
 456          };
 457          
 458          /*
 459          TX ON ICON
 460            horizontal size is 32 pixels.
 461            vertical size is 8 pixels.
 462          */
 463          const SEGMENT_VARIABLE(txon_inverted32x8[], U8, SEG_CODE) = {
 464          1,32,
 465          '\xff',
 466          '\xfd',
 467          '\xfd',
 468          '\x81',
 469          '\xfd',
 470          '\xfd',
 471          '\xff',
 472          '\xbd',
 473          '\xdb',
 474          '\xe7',
 475          '\xe7',
 476          '\xdb',
 477          '\xbd',
 478          '\xff',
 479          '\xff',
 480          '\xff',
 481          '\xc3',
 482          '\xbd',
 483          '\xbd',
 484          '\xbd',
 485          '\xc3',
 486          '\xff',
 487          '\x81',
 488          '\xfb',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 9   

 489          '\xf7',
 490          '\xef',
 491          '\xdf',
 492          '\x81',
 493          '\xff',
 494          '\x00',
 495          '\x00',
 496          '\x00',
 497          };
 498          
 499          /*
 500          TX OFF ICON
 501          
 502            horizontal size is 32 pixels.
 503            vertical size is 8 pixels.
 504          */
 505          const SEGMENT_VARIABLE(txoff_inverted32x8[], U8, SEG_CODE) = {
 506          1,32,
 507          '\xff',
 508          '\xfd',
 509          '\xfd',
 510          '\x81',
 511          '\xfd',
 512          '\xfd',
 513          '\xff',
 514          '\xbd',
 515          '\xdb',
 516          '\xe7',
 517          '\xe7',
 518          '\xdb',
 519          '\xbd',
 520          '\xff',
 521          '\xff',
 522          '\xff',
 523          '\xc3',
 524          '\xbd',
 525          '\xbd',
 526          '\xbd',
 527          '\xc3',
 528          '\xff',
 529          '\x81',
 530          '\xf5',
 531          '\xf5',
 532          '\xfd',
 533          '\xff',
 534          '\x81',
 535          '\xf5',
 536          '\xf5',
 537          '\xfd',
 538          '\xff'
 539          };
 540          
 541          /*
 542          CLEAR ICON
 543            horizontal size is 29 pixels.
 544            vertical size is 8 pixels.
 545          */
 546          const SEGMENT_VARIABLE(clear_inverted29x8[], U8, SEG_CODE) = {
 547          1,29,
 548          '\xff',
 549          '\xff',
 550          '\xc3',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 10  

 551          '\xbd',
 552          '\xbd',
 553          '\xbd',
 554          '\xff',
 555          '\x81',
 556          '\xbf',
 557          '\xbf',
 558          '\xbf',
 559          '\xff',
 560          '\x81',
 561          '\xad',
 562          '\xad',
 563          '\xbd',
 564          '\xff',
 565          '\x83',
 566          '\xed',
 567          '\xed',
 568          '\xed',
 569          '\x83',
 570          '\xff',
 571          '\x81',
 572          '\xed',
 573          '\xed',
 574          '\x93',
 575          '\xff',
 576          '\xff'
 577          };
 578          
 579          /*
 580          CLEAR ICON
 581            horizontal size is 27 pixels.
 582            vertical size is 8 pixels.
 583          */
 584          const SEGMENT_VARIABLE(clear_inverted27x8[], U8, SEG_CODE) = {
 585          1,27,
 586          '\xff',
 587          '\xc3',
 588          '\xbd',
 589          '\xbd',
 590          '\xbd',
 591          '\xff',
 592          '\x81',
 593          '\xbf',
 594          '\xbf',
 595          '\xbf',
 596          '\xff',
 597          '\x81',
 598          '\xad',
 599          '\xad',
 600          '\xbd',
 601          '\xff',
 602          '\x83',
 603          '\xed',
 604          '\xed',
 605          '\xed',
 606          '\x83',
 607          '\xff',
 608          '\x81',
 609          '\xed',
 610          '\xed',
 611          '\x93',
 612          '\xff',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 11  

 613          };
 614          
 615          /*
 616          SETTING ICON
 617            horizontal size is 48 pixels.
 618            vertical size is 8 pixels.
 619          */
 620          const SEGMENT_VARIABLE(setting_inverted48x8[], U8, SEG_CODE) = {
 621          1,48,
 622          '\xff',
 623          '\xff',
 624          '\xbb',
 625          '\xb5',
 626          '\xb5',
 627          '\xb5',
 628          '\xcd',
 629          '\xff',
 630          '\x81',
 631          '\xb5',
 632          '\xb5',
 633          '\xbd',
 634          '\xff',
 635          '\xfd',
 636          '\xfd',
 637          '\x81',
 638          '\xfd',
 639          '\xfd',
 640          '\xff',
 641          '\xfd',
 642          '\xfd',
 643          '\x81',
 644          '\xfd',
 645          '\xfd',
 646          '\xff',
 647          '\x81',
 648          '\xff',
 649          '\x81',
 650          '\xfb',
 651          '\xf7',
 652          '\xef',
 653          '\xdf',
 654          '\x81',
 655          '\xff',
 656          '\xc3',
 657          '\xbd',
 658          '\xbd',
 659          '\xad',
 660          '\xcf',
 661          '\xff',
 662          '\xbb',
 663          '\xb5',
 664          '\xb5',
 665          '\xb5',
 666          '\xcd',
 667          '\xff',
 668          '\xff',
 669          '\xff'
 670          };
 671          
 672          /*
 673          SETTING ICON
 674            horizontal size is 45 pixels.
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 12  

 675            vertical size is 8 pixels.
 676          */
 677          const SEGMENT_VARIABLE(setting_inverted45x8[], U8, SEG_CODE) = {
 678          1,45,
 679          '\xff',
 680          '\xbb',
 681          '\xb5',
 682          '\xb5',
 683          '\xb5',
 684          '\xcd',
 685          '\xff',
 686          '\x81',
 687          '\xb5',
 688          '\xb5',
 689          '\xbd',
 690          '\xff',
 691          '\xfd',
 692          '\xfd',
 693          '\x81',
 694          '\xfd',
 695          '\xfd',
 696          '\xff',
 697          '\xfd',
 698          '\xfd',
 699          '\x81',
 700          '\xfd',
 701          '\xfd',
 702          '\xff',
 703          '\x81',
 704          '\xff',
 705          '\x81',
 706          '\xfb',
 707          '\xf7',
 708          '\xef',
 709          '\xdf',
 710          '\x81',
 711          '\xff',
 712          '\xc3',
 713          '\xbd',
 714          '\xbd',
 715          '\xad',
 716          '\xcf',
 717          '\xff',
 718          '\xbb',
 719          '\xb5',
 720          '\xb5',
 721          '\xb5',
 722          '\xcd',
 723          '\xff',
 724          };
 725          
 726          /*
 727          MINUS ICON
 728            horizontal size is 16 pixels.
 729            vertical size is 8 pixels.
 730          */
 731          const SEGMENT_VARIABLE(minus_inverted16x8[], U8, SEG_CODE) = {
 732          1,16,
 733          '\xff',
 734          '\xff',
 735          '\xff',
 736          '\xff',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 13  

 737          '\xff',
 738          '\xe7',
 739          '\xe7',
 740          '\xe7',
 741          '\xe7',
 742          '\xe7',
 743          '\xe7',
 744          '\xff',
 745          '\xff',
 746          '\xff',
 747          '\xff',
 748          '\xff'
 749          };
 750          
 751          /*
 752          PLUS ICON
 753            horizontal size is 16 pixels.
 754            vertical size is 8 pixels.
 755          */
 756          const SEGMENT_VARIABLE(plus_inverted16x8[], U8, SEG_CODE) = {
 757          1,16,
 758          '\xff',
 759          '\xff',
 760          '\xff',
 761          '\xff',
 762          '\xff',
 763          '\xe7',
 764          '\xe7',
 765          '\x81',
 766          '\x81',
 767          '\xe7',
 768          '\xe7',
 769          '\xff',
 770          '\xff',
 771          '\xff',
 772          '\xff',
 773          '\xff'
 774          };
 775          
 776          /*
 777          UP_DOWN ICON
 778            horizontal size is 16 pixels.
 779            vertical size is 8 pixels.
 780          */
 781          const SEGMENT_VARIABLE(up_down_inverted16x8[], U8, SEG_CODE) = {
 782          1,16,
 783          '\xff',
 784          '\xff',
 785          '\xf7',
 786          '\xf3',
 787          '\x81',
 788          '\xf3',
 789          '\xf7',
 790          '\xff',
 791          '\xff',
 792          '\xef',
 793          '\xcf',
 794          '\x81',
 795          '\xcf',
 796          '\xef',
 797          '\xff',
 798          '\xff'
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 14  

 799          };
 800          
 801          /*
 802          GO ICON
 803            horizontal size is 16 pixels.
 804            vertical size is 8 pixels.
 805          */
 806          const SEGMENT_VARIABLE(go_inverted16x8[], U8, SEG_CODE) = {
 807          1,16,
 808          '\xff',
 809          '\xff',
 810          '\xc3',
 811          '\xbd',
 812          '\xbd',
 813          '\xad',
 814          '\xcf',
 815          '\xff',
 816          '\xff',
 817          '\xc3',
 818          '\xbd',
 819          '\xbd',
 820          '\xbd',
 821          '\xc3',
 822          '\xff',
 823          '\xff'
 824          };
 825          
 826          /*
 827           Silabs LOGO
 828                  horizontal size is 66 pixels.
 829                  vertical size is 30 pixels.
 830          */
 831          const SEGMENT_VARIABLE(silabs66x30[], U8, SEG_CODE) = {
 832          4, 66,
 833          '\x00','\x00','\x00','\x23',
 834          '\x00','\x00','\x80','\x24',
 835          '\x00','\x00','\x80','\x24',
 836          '\x00','\xe0','\x81','\x18',
 837          '\x00','\xf8','\x01','\x00',
 838          '\x00','\xfc','\x07','\x00',
 839          '\x00','\xfe','\x0f','\x00',
 840          '\x00','\xff','\x8f','\x3f',
 841          '\x80','\xff','\x1f','\x00',
 842          '\x80','\xff','\x1f','\x00',
 843          '\x80','\xff','\x11','\x00',
 844          '\xc0','\xff','\x91','\x3f',
 845          '\xe0','\xff','\x00','\x20',
 846          '\xe0','\xff','\x00','\x20',
 847          '\xf0','\x7c','\x00','\x20',
 848          '\x70','\x70','\x00','\x00',
 849          '\x30','\x70','\x00','\x00',
 850          '\x38','\x70','\x80','\x3f',
 851          '\x18','\x60','\x03','\x00',
 852          '\x18','\x60','\x07','\x00',
 853          '\x1c','\xe0','\x0f','\x00',
 854          '\x0c','\xe0','\x0f','\x00',
 855          '\x0c','\xe0','\x0f','\x1f',
 856          '\x06','\xe0','\x8f','\x20',
 857          '\x06','\xe0','\x8f','\x20',
 858          '\x82','\xe1','\x8f','\x20',
 859          '\xc2','\xe3','\x0f','\x00',
 860          '\xf2','\xe7','\x0f','\x00',
C51 COMPILER V9.56.0.0   PICTURES                                                          07/20/2018 15:28:24 PAGE 15  

 861          '\xf2','\xe7','\x0f','\x1f',
 862          '\xf3','\xe5','\x8f','\x20',
 863          '\xfb','\xe5','\x8f','\x20',
 864          '\xf9','\xe5','\x0f','\x1f',
 865          '\xfd','\xe5','\x0f','\x00',
 866          '\xfd','\xe4','\x0f','\x00',
 867          '\xfe','\xe4','\x8f','\x3f',
 868          '\xfe','\xe4','\x07','\x06',
 869          '\xfe','\xfc','\x07','\x0c',
 870          '\xfe','\xfc','\x83','\x3f',
 871          '\xfe','\xfc','\x03','\x00',
 872          '\xfe','\xfc','\x01','\x00',
 873          '\xfe','\xf8','\x09','\x00',
 874          '\xfe','\xf0','\x08','\x00',
 875          '\xfe','\x60','\x08','\x00',
 876          '\xfe','\x00','\x08','\x00',
 877          '\xfe','\x00','\x08','\x00',
 878          '\xfe','\x00','\x88','\x3f',
 879          '\xfe','\x00','\x0c','\x20',
 880          '\xfc','\x00','\x06','\x20',
 881          '\xb8','\x00','\x06','\x20',
 882          '\x90','\x01','\x03','\x00',
 883          '\x80','\x01','\x01','\x3f',
 884          '\x80','\x01','\x81','\x04',
 885          '\x80','\xc3','\x81','\x04',
 886          '\x80','\xe7','\x01','\x3f',
 887          '\x80','\xe7','\x00','\x00',
 888          '\xc0','\xff','\x00','\x00',
 889          '\xe2','\x7f','\x80','\x3f',
 890          '\xf2','\x3f','\x80','\x24',
 891          '\xfe','\x3f','\x80','\x24',
 892          '\xfe','\x0f','\x00','\x1b',
 893          '\xfc','\x0f','\x00','\x00',
 894          '\xf8','\x07','\x00','\x00',
 895          '\xf0','\x01','\x00','\x23',
 896          '\xc6','\x00','\x80','\x24',
 897          '\x06','\x00','\x80','\x24',
 898          '\x00','\x00','\x80','\x18' 
 899          }; 
 900          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    871    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
