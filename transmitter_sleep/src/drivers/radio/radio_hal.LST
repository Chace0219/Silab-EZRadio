C51 COMPILER V9.56.0.0   RADIO_HAL                                                         07/20/2018 15:28:23 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE RADIO_HAL
OBJECT MODULE PLACED IN radio_hal.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\c51.exe radio_hal.c DB OE BR SMALL OPTIMIZE(11,SIZE) DEFINE(SILABS_PLATFORM_WMB9
                    -12) DEFINE(SILABS_WMCU_SI106x)

line level    source

   1          /*!
   2           * File:
   3           *  radio_hal.c
   4           *
   5           * Description:
   6           *  This file contains RADIO HAL.
   7           *
   8           * Silicon Laboratories Confidential
   9           * Copyright 2011 Silicon Laboratories, Inc.
  10           */
  11          
  12                          /* ======================================= *
  13                           *              I N C L U D E              *
  14                           * ======================================= */
  15          
  16          #include "..\..\bsp.h"
  17          
  18          
  19                          /* ======================================= *
  20                           *          D E F I N I T I O N S          *
  21                           * ======================================= */
  22          
  23                          /* ======================================= *
  24                           *     G L O B A L   V A R I A B L E S     *
  25                           * ======================================= */
  26          
  27                          /* ======================================= *
  28                           *      L O C A L   F U N C T I O N S      *
  29                           * ======================================= */
  30          
  31                          /* ======================================= *
  32                           *     P U B L I C   F U N C T I O N S     *
  33                           * ======================================= */
  34          
  35          void radio_hal_AssertShutdown(void)
  36          {
  37   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB)
  38   1        RF_PWRDN = 1;
  39   1      #else
                PWRDN = 1;
              #endif
  42   1      }
  43          
  44          void radio_hal_DeassertShutdown(void)
  45          {
  46   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB)
  47   1        RF_PWRDN = 0;
  48   1      #else
                PWRDN = 0;
              #endif
  51   1      }
  52          
  53          void radio_hal_ClearNsel(void)
  54          {
C51 COMPILER V9.56.0.0   RADIO_HAL                                                         07/20/2018 15:28:23 PAGE 2   

  55   1          RF_NSEL = 0;
  56   1      }
  57          
  58          void radio_hal_SetNsel(void)
  59          {
  60   1          RF_NSEL = 1;
  61   1      }
  62          
  63          BIT radio_hal_NirqLevel(void)
  64          {
  65   1          return RF_NIRQ;
  66   1      }
  67          
  68          void radio_hal_SpiWriteByte(U8 byteToWrite)
  69          {
  70   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB)
  71   1        bSpi_ReadWriteSpi1(byteToWrite);
  72   1      #else
                SpiReadWrite(byteToWrite);
              #endif
  75   1      }
  76          
  77          U8 radio_hal_SpiReadByte(void)
  78          {
  79   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB)
  80   1        return bSpi_ReadWriteSpi1(0xFF);
  81   1      #else
                return SpiReadWrite(0xFF);
              #endif
  84   1      }
  85          
  86          void radio_hal_SpiWriteData(U8 byteCount, U8* pData)
  87          {
  88   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB)
  89   1        vSpi_WriteDataSpi1(byteCount, pData);
  90   1      #else
                SpiWriteData(byteCount, pData);
              #endif
  93   1      }
  94          
  95          void radio_hal_SpiReadData(U8 byteCount, U8* pData)
  96          {
  97   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB)
  98   1        vSpi_ReadDataSpi1(byteCount, pData);
  99   1      #else
                SpiReadData(byteCount, pData);
              #endif
 102   1      }
 103          
 104          #ifdef RADIO_DRIVER_EXTENDED_SUPPORT
 105          BIT radio_hal_Gpio0Level(void)
 106          {
 107   1        BIT retVal = FALSE;
 108   1      
 109   1      #ifdef SILABS_PLATFORM_DKMB
                retVal = FALSE;
              #endif
 112   1      #ifdef SILABS_PLATFORM_UDP
                retVal = EZRP_RX_DOUT;
              #endif
 115   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB)
                retVal = RF_GPIO0;
C51 COMPILER V9.56.0.0   RADIO_HAL                                                         07/20/2018 15:28:23 PAGE 3   

              #endif
 118   1      #if (defined SILABS_PLATFORM_WMB930)
                retVal = FALSE;
              #endif
 121   1      #if defined (SILABS_PLATFORM_WMB912)
 122   1        #ifdef SILABS_IO_WITH_EXTENDER
 123   1          //TODO
 124   1          retVal = FALSE;
 125   1        #endif
 126   1      #endif
 127   1      
 128   1        return retVal;
 129   1      }
 130          
 131          BIT radio_hal_Gpio1Level(void)
 132          {
 133   1        BIT retVal = FALSE;
 134   1      
 135   1      #ifdef SILABS_PLATFORM_DKMB
                retVal = FSK_CLK_OUT;
              #endif
 138   1      #ifdef SILABS_PLATFORM_UDP
                retVal = FALSE; //No Pop
              #endif
 141   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB93
             -0)
                retVal = RF_GPIO1;
              #endif
 144   1      #if defined (SILABS_PLATFORM_WMB912)
 145   1        #ifdef SILABS_IO_WITH_EXTENDER
 146   1          //TODO
 147   1          retVal = FALSE;
 148   1        #endif
 149   1      #endif
 150   1      
 151   1        return retVal;
 152   1      }
 153          
 154          BIT radio_hal_Gpio2Level(void)
 155          {
 156   1        BIT retVal = FALSE;
 157   1      
 158   1      #ifdef SILABS_PLATFORM_DKMB
                retVal = DATA_NFFS;
              #endif
 161   1      #ifdef SILABS_PLATFORM_UDP
                retVal = FALSE; //No Pop
              #endif
 164   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB93
             -0)
                retVal = RF_GPIO2;
              #endif
 167   1      #if defined (SILABS_PLATFORM_WMB912)
 168   1        #ifdef SILABS_IO_WITH_EXTENDER
 169   1          //TODO
 170   1          retVal = FALSE;
 171   1        #endif
 172   1      #endif
 173   1      
 174   1        return retVal;
 175   1      }
 176          
C51 COMPILER V9.56.0.0   RADIO_HAL                                                         07/20/2018 15:28:23 PAGE 4   

 177          BIT radio_hal_Gpio3Level(void)
 178          {
 179   1        BIT retVal = FALSE;
 180   1      
 181   1      #if (defined SILABS_PLATFORM_RFSTICK) || (defined SILABS_PLATFORM_LCDBB) || (defined SILABS_PLATFORM_WMB93
             -0)
                retVal = RF_GPIO3;
              #elif defined (SILABS_PLATFORM_WMB912)
 184   1        #ifdef SILABS_IO_WITH_EXTENDER
 185   1          //TODO
 186   1          retVal = FALSE;
 187   1        #endif
 188   1      #endif
 189   1      
 190   1        return retVal;
 191   1      }
 192          
 193          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     58    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
